{"version":3,"sources":["../src/services/pdf.ts","../src/index.ts"],"sourcesContent":["import {\n    type IAgentRuntime,\n    type IPdfService,\n    Service,\n    ServiceType,\n} from \"@elizaos/core\";\nimport { getDocument, type PDFDocumentProxy } from \"pdfjs-dist\";\nimport type { TextItem, TextMarkedContent } from \"pdfjs-dist/types/src/display/api\";\n\nexport class PdfService extends Service implements IPdfService {\n    static serviceType: ServiceType = ServiceType.PDF;\n\n    constructor() {\n        super();\n    }\n\n    getInstance(): IPdfService {\n        return PdfService.getInstance();\n    }\n\n    async initialize(_runtime: IAgentRuntime): Promise<void> {}\n\n    async convertPdfToText(pdfBuffer: Buffer): Promise<string> {\n        // Convert Buffer to Uint8Array\n        const uint8Array = new Uint8Array(pdfBuffer);\n\n        const pdf: PDFDocumentProxy = await getDocument({ data: uint8Array })\n            .promise;\n        const numPages = pdf.numPages;\n        const textPages: string[] = [];\n\n        for (let pageNum = 1; pageNum <= numPages; pageNum++) {\n            const page = await pdf.getPage(pageNum);\n            const textContent = await page.getTextContent();\n            const pageText = textContent.items\n                .filter(isTextItem)\n                .map((item) => item.str)\n                .join(\" \");\n            textPages.push(pageText);\n        }\n\n        return textPages.join(\"\\n\");\n    }\n}\n\n// Type guard function\nfunction isTextItem(item: TextItem | TextMarkedContent): item is TextItem {\n    return \"str\" in item;\n}\n","import type { Plugin } from \"@elizaos/core\";\n\nimport {\n    PdfService,\n\n} from \"./services/pdf\";\n\nexport const browserPlugin: Plugin = {\n  name: \"default\",\n  description: \"Default plugin, with basic actions and evaluators\",\n  services: [new PdfService()],\n  actions: [],\n};\n\nexport default browserPlugin;"],"mappings":";AAAA;AAAA,EAGI;AAAA,EACA;AAAA,OACG;AACP,SAAS,mBAA0C;AAG5C,IAAM,cAAN,MAAM,oBAAmB,QAA+B;AAAA,EAG3D,cAAc;AACV,UAAM;AAAA,EACV;AAAA,EAEA,cAA2B;AACvB,WAAO,YAAW,YAAY;AAAA,EAClC;AAAA,EAEA,MAAM,WAAW,UAAwC;AAAA,EAAC;AAAA,EAE1D,MAAM,iBAAiB,WAAoC;AAEvD,UAAM,aAAa,IAAI,WAAW,SAAS;AAE3C,UAAM,MAAwB,MAAM,YAAY,EAAE,MAAM,WAAW,CAAC,EAC/D;AACL,UAAM,WAAW,IAAI;AACrB,UAAM,YAAsB,CAAC;AAE7B,aAAS,UAAU,GAAG,WAAW,UAAU,WAAW;AAClD,YAAM,OAAO,MAAM,IAAI,QAAQ,OAAO;AACtC,YAAM,cAAc,MAAM,KAAK,eAAe;AAC9C,YAAM,WAAW,YAAY,MACxB,OAAO,UAAU,EACjB,IAAI,CAAC,SAAS,KAAK,GAAG,EACtB,KAAK,GAAG;AACb,gBAAU,KAAK,QAAQ;AAAA,IAC3B;AAEA,WAAO,UAAU,KAAK,IAAI;AAAA,EAC9B;AACJ;AAlCa,YACF,cAA2B,YAAY;AAD3C,IAAM,aAAN;AAqCP,SAAS,WAAW,MAAsD;AACtE,SAAO,SAAS;AACpB;;;ACzCO,IAAM,gBAAwB;AAAA,EACnC,MAAM;AAAA,EACN,aAAa;AAAA,EACb,UAAU,CAAC,IAAI,WAAW,CAAC;AAAA,EAC3B,SAAS,CAAC;AACZ;AAEA,IAAO,gBAAQ;","names":[]}